'$BatchImport.s2s|Script to perform batch import of files
'
' Written by CED to provide a generally useful batch importer
' Alter the spec$ constant below to change the file type that
'  is imported - note this importer will attempt to import all
'  files in a folder matching this specification - so it is not
'  generally useful with some imported file types where multiple
'  files are used to hold the data from one experiment.
'
' Revision history:
'
' 26/Jul/2012 TDB   First version produced by tidying existing scripts

const spec$ := "R155*.bin";                                 ' The filename spec used to select files

main();
halt;

proc main()                                             ' All code in a function so name$ not global
var err%;                                               ' Useful variable to hold errors
err% := FilePathSet("", 0, "Folder to process");        ' Select the folder to use
if (err% < 0) then                                      ' If folder is cancelled or bad somehow
    Message("Folder selection failed");                 ' Give a message
    halt;                                               ' and quit
endif                                              

var nme$;                                               ' Dummy variable for filelist command
var num%;                                               ' Variable for number of found files
num% := Filelist(nme$, -1, spec$);                      ' Get the number of matching files in the folder
if (num% <= 0) then                                     ' If no files exist.....
    Message("No data files to process");
    halt;                                               ' and quit
endif;
var name$[num%];                                        ' Set size of array to hold data file names
Filelist(Name$[], -1, spec$);                           ' Get the names into the array
var i%;
for i% := 0 to num%-1 do
    ImportFile%(name$[i%]);                             ' do the import for this file
next;
end

' A function to import a single file & log how it went
Func ImportFile%(file$);
var ok%;
PrintLog("Importing file %s: ", file$);                 ' Log what we are doing
FileConvert$(file$, "", 0, ok%);                        ' Try to import the file
if (ok% < 0) then                                       ' Say how we did
    PrintLog("import failed, error %d (%s)\n", ok%, error$(ok%));
else
    PrintLog(file$);
    PrintLog("import successfull\n");
    'FileClose();                                        ' Close the file
endif;
return ok%;                                             ' and we are done
end
