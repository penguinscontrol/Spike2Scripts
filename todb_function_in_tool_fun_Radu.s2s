func todb%()
'Sends current sort to database
var ok%;
var thisname$ := FileName$(3)+FileName$(4);
var subj$ := Left$(thisname$,1);

    var subjects$[3],subchoice%;
    subjects$[0] := "Rigel";
    subjects$[1] := "Sixx";
    subjects$[2] := "Hilda";

docase
case subj$ = "R" then
    subj$ := subjects$[0];
case subj$ = "S" then
    subj$ := subjects$[1];
case subj$ = "H" then
    subj$ := subjects$[2];
else 
    DlgCreate("Export for REXDataGUI");
    DlgList(1,"Which subject is this?",subjects$[]);
    DlgButton(0,"Cancel");
    DlgButton(1,"Done");
    ok% := DlgShow(subchoice%);
    if ok% = 0 then halt; endif;
    subj$ := subjects$[subchoice%];   
endcase;

var chamber$ := "UNKNOWN";
var user$ := "Vincent";
DlgCreate("Commit sort to Database");
DlgString(1,"Please indicate chamber:",128, "", 0, 0, "Cerebellum|Thalamus|UNKNOWN");
DlgString(2, "Please indicate user:",128,"",0,0,"Vincent|Manu|Radu");
DlgButton(0,"Cancel");
DlgButton(1,"OK");
ok% := DlgShow(chamber$,user$);

MatlabOpen(1);
MatlabEval("clear;clc;");
MatlabEval("conn = connect2DB();");
MatlabEval("ftp_conn = ftp('152.3.216.217', 'Radu', 'monkey');");

var today$ := Date$(2,2,3,3,"-");  'Numbers specify formatting which mysql will understand: yyyy-mm-dd HH:MM:SS.FFF
MatlabEval("newrecord = struct('name','"+thisname$+"','date','"+today$+"', 'chamber', '"+chamber$+"', 'user', '"+user$+"');"); ' package data to make a new recording

MatlabShow(1);
MatlabEval("[already, success, rec_id] = addRecord(newrecord, conn);");   'add the record if it isn't there. Update chamber if set to UNKNOWN

MatlabEval("[already_sorted, who_by, ids, howmany_sorts, fname] = checkSort(newrecord, conn);"); ' Check if there is a sort
var alreadySorted%, howmanysorts%;
ok% := MatlabGet("already_sorted", alreadySorted%);

var newsort% := 0;
var sel$;
if alreadySorted% = 1 then                                  'Inquire whether or not you want to overwrite an existing sort or create a new one
    ok% := MatlabGet("howmany_sorts", howmanysorts%);
    var ids%[howmanysorts%], indx%;
    ok% := MatlabGet("ids", ids%[]);
    MatlabEval("sp2list = existingSortSp2Dlg(who_by, fname)");
    ok% := MatlabGet("howmany", howmanysorts%);
    ok% := MatlabGet("sp2list", sel$);
    'Set the variables above for initial values
    DlgCreate("Sort already exists");  'Start new dialog
    DlgList(1,"File already sorted! Overwrite or Create new?", sel$, 3, 0);
    DlgButton(0,"New Entry");
    DlgButton(1,"Overwrite");
    newsort% := DlgShow(indx%);    'ok% is 0 if user cancels,  variables updated if not 
endif

var thesecomments$ := FileComment$(1)+FileComment$(2)+FileComment$(3)+FileComment$(4)+FileComment$(5);
    var recid%;
    MatlabGet("rec_id", recid%);  ' the sort's parent id
    MatlabEval("newsort = struct('name', '"+thisname$+"', 'comments', '"+thesecomments$+"', 'user', '"+user$+"', 'origin', 'Spike2', 'parent', "+Str$(recid%)+");");

if newsort% = 0 then
    ok% := MatlabEval("[success, sort_id] = addSort(newsort, conn);");
else
    ok% := MatlabEval("[success, sort_id] = updateSort("+Str$(ids%[indx%])+", newsort, conn)");
    
    ok% := MatlabEval("[success] = deleteChildren(sort_id, conn, ftp_conn)");
    
endif

' Get codes for all clusters
wvmrkch% := WvmrkChoose();
var numcodes% := getWavemarkInfo(wvmrkch%, 2);
var codelist%[numcodes%];
GetCodes(wvmrkch%,codelist%);

var i%, command$;
for i% := 0 to numcodes%-1 do
    command$ := "[success, c_id] = addCluster(sort_id, "+Str$(codelist%[i%])+", conn, ftp_conn);";
    ok% := MatlabEval(command$);
    command$ := "[success, psth_id] = addPsth(c_id, conn, ftp_conn)";
    ok% := MatlabEval(command$);
next;

MatLabClose();
return 1
end